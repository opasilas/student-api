apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: db
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: db
    spec:
      nodeSelector:
        name: dependency
      containers:
        - env:
            - name: PGUSER
              value: postgres
            - name: POSTGRES_DB
              value: student_api_db
            - name: POSTGRES_PASSWORD_FILE
              value: /app/secrets/db-password
            - name: POSTGRES_USER
              value: postgres
          image: postgres:alpine
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/pg_isready
                - -d
                - student_api_db
                - -U
                - postgres
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: db
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /app/secrets/db-password
              name: db-password
              subPath: db-password
            - mountPath: /var/lib/postgresql/data
              name: db-data
      restartPolicy: Always
      volumes:
        - name: db-password
          secret:
            items:
              - key: db-password
                path: db-password
            secretName: db-password
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data
